# Multi-Stage build with build and deploy jobs

name: Build and deploy FastApi Python app to Azure Web App 

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.10'
  AZURE_WEBAPP_NAME: 'fastapi-likith012'
  WORKING_DIRECTORY: '.'
  STARTUP_COMMAND: 'alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub 
        uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            . 
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      # url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
      
      - name: Authenticate with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configure general settings for Azure App Service
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          mask-inputs: false
          general-settings-json: '{"linuxFxVersion": "PYTHON|${{ env.PYTHON_VERSION }}"}' #'General configuration settings as Key Value pairs'

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        # id: deploy-to-webapp
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          # slot-name: 'Production'
          package: ${{ env.WORKING_DIRECTORY }}
          startup-command: ${{ env.STARTUP_COMMAND }}
      
      - name: Logout of Azure
        run: |
          az logout
          